# LOGD PREDICTIONS
#
# This file will be automatically parsed. It must contain the following four elements:
# predictions, name of method, software listing, and method description.
# These elements must be provided in the order shown with their respective headers.
#
# Any line that begins with a # is considered a comment and will be ignored when parsing.
#
#
# PREDICTION SECTION
#
# It is mandatory to submit logD predictions for all challenge molecules for
# which data is available in at least one solvent pair.
# See https://github.com/samplchallenges/SAMPL8/tree/master/physical_properties for data availability.
# Incomplete submissions will not be accepted.
# You must submit predictions for at least one solvent pair (eg. Octanol-water, Cyclohexane-water, Ethyl acetate-water, etc etc).
#
# Please report the general molecule `ID tag` in the form of `SAMPL8-X` (e.g. SAMPL8-1, SAMPL8-2, etc).
# Please indicate the microstate(s) used in the `Molecule ID/IDs considered (no commas)` section (e.g. `SAMPL8-1_micro000`, `SAMPL8-1_micro000 SAMPL8-1_extra001`)
# Please report standard error of the mean (SEM) and model uncertainty.
#
# The data in each prediction line should be structured as follows:
# ID tag, Molecule ID/IDs considered (no commas), logD prediction, logD SEM, logD model uncertainty
#
#
# List out all IDs considered/input to your calculations in the second column (`Molecule ID/IDs considered (no commas)`). See challenge instructions.
# If multiple microstates are used, please report the order of population in the aqueous phase in descending order.
# Please list microstate populations, SMILES strings and the molecule IDs in the `METHOD DESCRIPTION SECTION` section further below.
#
# Predictions for each solvent pair must have their own header, as illustrated here.
#
# We recommend editing this file with a plain text editor (e.g. vi, eMacs, etc.) and NOT a spreadsheet.
Octanol-water predictions:
SAMPL8-1,SAMPL8-1_micro000,0.63,0.01,0.71
SAMPL8-5,SAMPL8-5_micro000,0.07,0.01,0.71
SAMPL8-6,SAMPL8-6_micro000,-0.13,0.01,0.71
SAMPL8-7,SAMPL8-7_micro000,0.47,0.01,0.71
SAMPL8-9,SAMPL8-9_micro000,0.41,0.01,0.71
SAMPL8-10,SAMPL8-10_micro000,1.48,0.01,0.71
SAMPL8-12,SAMPL8-12_micro000,0.37,0.01,0.71
SAMPL8-14,SAMPL8-14_micro000,-0.09,0.01,0.71
SAMPL8-16,SAMPL8-16_micro000,-0.38,0.01,0.71

Cyclohexane-water predictions:

Ethyl acetate-water predictions:

Heptane-water predictions:

MEK-water predictions:

TBME-water predictions:

Cyclohexane-DMF predictions:

#
#
# Please list your name, using only UTF-8 characters as described above. The "Participant name:" entry is required.
Participant name:
CBIO3 Group

#
#
# Please list your organization/affiliation, using only UTF-8 characters as described above.
Participant organization:
Universidad de Costa Rica

#
#
# NAME SECTION
#
# Please provide an informal but informative name of the method used.
# The name must not exceed 40 characters.
# The 'Name:' keyword is required as shown here.
Name:
UCR-PLS3

#
#
# COMPUTE TIME SECTION
#
# Please provide the average compute time across all of the molecules, per biphasic system.
# For physical methods, report the GPU and/or CPU compute time in hours.
# For empirical methods, report the query time in hours.
# Create a new line for each processor type.
# The 'Compute time:' keyword is required as shown here.
Compute time:

octanol-water:
5 min, CPU


#
# COMPUTING AND HARDWARE SECTION
#
# Please provide details of the computing resources that were used to train models and make predictions.
# Please specify compute time for training models and querying separately for empirical prediction methods.
# Provide a detailed description of the hardware used to run the simulations.
# The 'Computing and hardware:' keyword is required as shown here.
Computing and hardware:
The Multiple Linear Regression (MLR) and Partial Least Squares was built using Python packages for data science for taking into account the frequency of functional groups. All computations were performed in desktop computers belonging to the research group.

# SOFTWARE SECTION
#
# List all major software packages used and their versions.
# Create a new line for each software.
# The 'Software:' keyword is required.
Software:
RDkit 
Python 3

# METHOD CATEGORY SECTION
#
# State which method category your prediction method is better described as:
# `Physical (MM)`, `Physical (QM)`, `Empirical`, or `Mixed`.
# Pick only one category label.
# The `Category:` keyword is required.
Category:
Empirical

# METHOD DESCRIPTION SECTION
#
# Methodology and computational details.
# Level of details should be roughly equivalent to that used in a publication.
# Please list out the method details of predictions for each solvent pair considered.
#
# Please include the values of key parameters with units.
# Please explain how statistical uncertainties were estimated.
#
# Please report SMILES strings and populations of all the microstates used in calculations in this section.
#
# Use as many lines of text as you need.
# All text following the 'Method:' keyword will be regarded as part of your free text methods description.
#
# Important: Please do not use phrases which are identical to the section headers of logD data. For example do not use "Octanol-water predictions:", 
# but use "Octanol-water predictions" instead (without the colon) or any other form. See example below.

Method:
A Multiple Linear Regressions (MLRs) and Partial Least Squares (PLSs) were made from experimental logP values from 14477 neutral compounds obtained from DrugBank and EPA Database. To obtain log D value the following formula was considered log D = log (PN + PI*10^d)- log(1+10^d), which considers both, the log P and log PI value. The log PI was obtained from log P by adding a correction factor which was obtained from experimental data considering the diference in the partition of neutral and ionic species of a given functional group
#
#
# All submissions must either be ranked or non-ranked.
# Only one ranked submission per participant is allowed, but you can turn in as many nonranked submissions as you want (we will still run analysis on them).
# The "Ranked:" keyword is required, and expects a Boolean value (True/False)
Ranked:
True
